"""
Test how to delete rows from a numpy array efficiently
"""
import numpy as np


{8: 8, 50: 50, 75: 75, 109: 109, 138: 138, 309: 309, 336: 336, 363: 363, 386: 386, 406: 406, 408: 408, 425: 425, 426: 426, 427: 427, 2: 2, 3: 3, 10: 10, 32: 32, 43: 43, 52: 52, 72: 72, 74: 74, 76: 76, 80: 80, 88: 88, 98: 98, 119: 119, 120: 120, 122: 122, 125: 125, 126: 126, 127: 127, 132: 132, 139: 139, 144: 144, 145: 145, 148: 148, 165: 165, 183: 183, 261: 261, 268: 268, 271: 271, 287: 287, 290: 290, 295: 295, 296: 296, 297: 297, 301: 301, 302: 302, 303: 303, 307: 307, 308: 308, 310: 310, 312: 312, 317: 317, 328: 328, 329: 329, 340: 340, 345: 345, 349: 349, 361: 361, 366: 366, 367: 367, 368: 368, 382: 382, 383: 383, 384: 384, 385: 385, 389: 389, 394: 394, 410: 410, 420: 420, 423: 423, 608: 608, 650: 650, 792: 792, 428: 428, 429: 429, 430: 430, 434: 434, 435: 435, 436: 436, 440: 440, 446: 446, 451: 451, 456: 456, 461: 461, 466: 466, 467: 467, 468: 468, 475: 475, 479: 479, 490: 490, 491: 491, 492: 492, 493: 493, 494: 494, 495: 495, 498: 498, 499: 499, 506: 506, 509: 509, 528: 528, 531: 531, 548: 548, 553: 553, 554: 554, 555: 555, 563: 563, 566: 566, 574: 574, 602: 602, 616: 616, 619: 619, 633: 633, 641: 641, 647: 647, 652: 652, 653: 653, 686: 686, 688: 688, 689: 689, 693: 693, 699: 699, 702: 702, 712: 712, 713: 713, 722: 722, 728: 728, 729: 729, 730: 730, 4: 4, 5: 4, 6: 4, 7: 4, 9: 4, 11: 11, 12: 11, 13: 11, 15: 11, 16: 11, 17: 11, 19: 11, 20: 11, 21: 11, 23: 11, 24: 11, 26: 11, 29: 11, 30: 11, 14: 14, 18: 14, 22: 14, 25: 14, 27: 14, 28: 14, 31: 14, 35: 14, 37: 14, 38: 14, 41: 14, 44: 14, 47: 14, 48: 14, 33: 33, 34: 33, 36: 33, 39: 33, 40: 33, 42: 33, 45: 45, 46: 45, 49: 45, 51: 45, 53: 53, 55: 53, 56: 53, 57: 53, 58: 53, 60: 53, 61: 53, 63: 53, 65: 53, 66: 53, 67: 53, 68: 53, 69: 53, 70: 53, 54: 54, 59: 54, 62: 54, 64: 54, 71: 54, 73: 54, 77: 77, 79: 77, 78: 78, 81: 78, 83: 78, 87: 78, 93: 78, 96: 78, 99: 78, 104: 78, 105: 78, 107: 78, 82: 82, 84: 82, 85: 82, 86: 82, 89: 89, 90: 89, 91: 89, 92: 89, 94: 89, 95: 89, 97: 89, 100: 100, 101: 100, 102: 100, 103: 100, 106: 100, 108: 100, 110: 100, 111: 100, 112: 100, 114: 100, 115: 100, 117: 100, 118: 100, 113: 113, 116: 113, 121: 113, 123: 123, 124: 123, 128: 128, 129: 128, 130: 128, 131: 128, 133: 133, 134: 133, 135: 133, 136: 133, 137: 133, 140: 140, 141: 140, 142: 140, 143: 143, 163: 143, 168: 143, 189: 143, 206: 143, 249: 143, 259: 143, 146: 146, 147: 146, 149: 149, 150: 149, 151: 149, 152: 149, 153: 149, 154: 149, 155: 149, 156: 149, 157: 149, 158: 149, 159: 149, 160: 149, 161: 149, 162: 149, 164: 149, 166: 166, 167: 166, 169: 166, 170: 166, 171: 166, 172: 166, 173: 166, 174: 166, 175: 166, 176: 166, 177: 166, 178: 166, 179: 166, 180: 166, 181: 166, 182: 166, 184: 184, 185: 184, 186: 184, 187: 184, 188: 184, 190: 184, 191: 184, 192: 184, 193: 184, 194: 184, 195: 184, 196: 184, 197: 184, 198: 184, 199: 184, 200: 184, 201: 184, 202: 184, 203: 184, 204: 184, 205: 184, 207: 184, 208: 184, 209: 184, 210: 184, 211: 184, 212: 184, 213: 184, 214: 184, 215: 184, 216: 184, 217: 184, 218: 184, 219: 184, 220: 184, 221: 184, 222: 184, 223: 184, 224: 184, 225: 184, 226: 184, 227: 184, 228: 184, 229: 184, 230: 184, 231: 184, 232: 184, 233: 184, 234: 184, 235: 184, 236: 184, 237: 184, 238: 184, 239: 184, 240: 184, 241: 184, 242: 184, 243: 184, 244: 184, 245: 184, 246: 184, 247: 184, 248: 184, 250: 184, 251: 184, 252: 184, 253: 184, 254: 184, 255: 184, 256: 184, 257: 184, 258: 184, 260: 184, 262: 262, 263: 262, 264: 262, 265: 262, 266: 262, 267: 262, 269: 269, 270: 269, 272: 272, 273: 272, 274: 272, 275: 272, 276: 272, 277: 272, 278: 272, 279: 272, 280: 272, 281: 272, 282: 272, 283: 272, 284: 272, 285: 272, 286: 272, 288: 288, 289: 288, 291: 291, 292: 291, 293: 291, 294: 291, 298: 298, 299: 298, 300: 298, 304: 304, 305: 304, 306: 304, 311: 311, 315: 311, 313: 313, 314: 313, 316: 313, 318: 318, 319: 318, 320: 318, 321: 318, 322: 318, 323: 318, 324: 318, 325: 318, 326: 318, 327: 318, 330: 330, 331: 330, 332: 330, 333: 330, 334: 330, 335: 330, 337: 330, 338: 330, 339: 330, 341: 341, 342: 341, 343: 341, 344: 341, 346: 346, 347: 346, 348: 348, 360: 348, 350: 350, 351: 350, 352: 350, 353: 350, 354: 350, 355: 350, 356: 350, 357: 350, 358: 350, 359: 350, 362: 362, 364: 362, 365: 362, 369: 369, 370: 369, 378: 369, 380: 369, 371: 371, 372: 371, 373: 371, 374: 371, 375: 371, 376: 371, 377: 371, 379: 371, 381: 371, 387: 387, 388: 387, 390: 390, 391: 390, 392: 390, 393: 390, 395: 395, 396: 395, 397: 395, 398: 395, 400: 395, 401: 395, 402: 395, 405: 395, 407: 395, 399: 399, 403: 399, 404: 399, 409: 409, 418: 409, 1: 409, 411: 411, 413: 411, 416: 411, 419: 411, 421: 411, 422: 411, 424: 411, 412: 412, 414: 412, 415: 412, 417: 412, 431: 431, 432: 431, 433: 431, 437: 437, 438: 437, 439: 437, 441: 441, 442: 441, 443: 441, 444: 441, 445: 441, 447: 447, 448: 447, 449: 447, 450: 447, 452: 452, 453: 452, 454: 452, 455: 452, 457: 457, 458: 457, 459: 457, 460: 457, 462: 462, 463: 462, 464: 462, 465: 462, 469: 469, 470: 469, 471: 469, 472: 469, 473: 469, 474: 469, 476: 476, 477: 476, 478: 476, 480: 480, 481: 480, 482: 480, 483: 480, 484: 480, 485: 480, 486: 480, 487: 480, 488: 480, 489: 480, 496: 496, 497: 496, 500: 500, 501: 500, 502: 500, 503: 500, 504: 500, 505: 500, 507: 507, 508: 507, 510: 510, 511: 510, 512: 510, 513: 510, 514: 510, 515: 510, 516: 510, 517: 510, 518: 510, 519: 510, 520: 510, 521: 510, 522: 510, 523: 510, 524: 510, 525: 510, 526: 510, 527: 510, 529: 529, 530: 529, 532: 532, 533: 532, 534: 532, 535: 532, 536: 532, 537: 532, 538: 532, 539: 532, 540: 532, 541: 532, 542: 532, 543: 532, 544: 532, 545: 532, 546: 532, 547: 532, 549: 549, 550: 549, 551: 549, 552: 549, 556: 556, 557: 556, 558: 556, 559: 556, 560: 556, 561: 556, 562: 556, 564: 564, 565: 564, 567: 567, 568: 567, 569: 567, 570: 567, 571: 567, 572: 567, 573: 567, 575: 575, 584: 575, 591: 575, 600: 575, 604: 575, 576: 576, 577: 576, 578: 576, 579: 576, 580: 576, 581: 576, 582: 576, 583: 576, 585: 576, 586: 576, 587: 576, 588: 576, 589: 576, 590: 576, 592: 576, 593: 576, 594: 576, 595: 576, 596: 576, 597: 576, 598: 576, 599: 576, 601: 576, 603: 603, 605: 603, 606: 603, 607: 603, 609: 603, 610: 603, 611: 603, 612: 603, 613: 603, 615: 603, 614: 614, 625: 614, 628: 614, 632: 614, 635: 614, 642: 614, 617: 617, 618: 617, 620: 620, 621: 620, 622: 620, 623: 620, 624: 620, 626: 620, 627: 620, 629: 620, 630: 620, 631: 620, 634: 634, 636: 634, 637: 634, 638: 634, 639: 634, 640: 634, 643: 643, 644: 643, 645: 643, 646: 643, 648: 648, 649: 648, 651: 648, 654: 654, 655: 654, 657: 654, 658: 654, 659: 654, 660: 654, 661: 654, 662: 654, 664: 654, 665: 654, 666: 654, 667: 654, 668: 654, 669: 654, 670: 654, 671: 654, 672: 654, 673: 654, 674: 654, 675: 654, 676: 654, 677: 654, 678: 654, 679: 654, 680: 654, 681: 654, 682: 654, 684: 654, 685: 654, 656: 656, 663: 656, 683: 656, 687: 656, 691: 656, 725: 656, 735: 656, 736: 656, 737: 656, 738: 656, 739: 656, 740: 656, 741: 656, 742: 656, 743: 656, 744: 656, 745: 656, 746: 656, 747: 656, 748: 656, 749: 656, 750: 656, 751: 656, 752: 656, 753: 656, 754: 656, 755: 656, 756: 656, 757: 656, 758: 656, 759: 656, 760: 656, 761: 656, 762: 656, 763: 656, 764: 656, 765: 656, 766: 656, 767: 656, 768: 656, 769: 656, 770: 656, 771: 656, 772: 656, 773: 656, 774: 656, 775: 656, 776: 656, 777: 656, 778: 656, 779: 656, 780: 656, 781: 656, 782: 656, 783: 656, 784: 656, 785: 656, 786: 656, 787: 656, 788: 656, 789: 656, 790: 656, 791: 656, 690: 690, 692: 690, 694: 694, 695: 694, 696: 694, 697: 694, 698: 694, 700: 700, 701: 700, 703: 703, 704: 703, 705: 703, 706: 703, 707: 703, 708: 703, 709: 703, 710: 703, 711: 703, 714: 714, 715: 714, 716: 714, 717: 714, 718: 714, 719: 714, 720: 714, 721: 714, 723: 723, 724: 723, 726: 723, 727: 723, 731: 731, 732: 731, 733: 731, 734: 731}

if __name__ == "__main__":
     a = np.array([[1,2,3],[4,5,6],[7,8,9]], dtype=float)
     my_dict = {1:10,4:40,7:70}
     my_func = np.vectorize(my_dict.get)
     b = my_func(a[:,0])
     print(a)
     print(b)
